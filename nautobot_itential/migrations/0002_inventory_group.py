# Generated by Django 3.2.23 on 2024-02-14 18:33

import django.core.serializers.json
from django.db import migrations, models
import nautobot.core.models.fields
import nautobot.extras.models.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("extras", "0102_set_null_objectchange_contenttype"),
        ("dcim", "0052_fix_interface_redundancy_group_created"),
        ("nautobot_itential", "0001_itential_automation_gateway_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="InventoryGroupModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.CharField(blank=True, max_length=512)),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("devices", models.ManyToManyField(blank=True, to="dcim.Device")),
                ("platforms", models.ManyToManyField(blank=True, to="dcim.Platform")),
                ("tags", nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "verbose_name": "Inventory Group Management",
                "verbose_name_plural": "Inventory Group Management",
                "ordering": ["name", "context"],
            },
            bases=(
                models.Model,
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
            ),
        ),
    ]
