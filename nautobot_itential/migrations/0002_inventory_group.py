# Generated by Django 3.2.23 on 2024-02-15 23:07

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.models.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("extras", "0102_set_null_objectchange_contenttype"),
        ("dcim", "0052_fix_interface_redundancy_group_created"),
        ("nautobot_itential", "0001_itential_automation_gateway_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="InventoryGroupDeviceAssociationModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_group_device_associations",
                        to="dcim.device",
                    ),
                ),
            ],
            options={
                "ordering": ("device_group", "device"),
            },
        ),
        migrations.CreateModel(
            name="InventoryGroupModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.CharField(blank=True, max_length=512)),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "devices",
                    models.ManyToManyField(
                        blank=True,
                        related_name="group_devices",
                        through="nautobot_itential.InventoryGroupDeviceAssociationModel",
                        to="dcim.Device",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Group Management",
                "verbose_name_plural": "Inventory Group Management",
                "ordering": ["name", "context"],
            },
            bases=(
                models.Model,
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
            ),
        ),
        migrations.CreateModel(
            name="InventoryGroupPlatformAssociationModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_group_platform_associations",
                        to="dcim.platform",
                    ),
                ),
                (
                    "platform_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="platform_group_associations",
                        to="nautobot_itential.inventorygroupmodel",
                    ),
                ),
            ],
            options={
                "ordering": ("platform_group", "platform"),
            },
        ),
        migrations.AddField(
            model_name="inventorygroupmodel",
            name="platforms",
            field=models.ManyToManyField(
                blank=True,
                related_name="group_platforms",
                through="nautobot_itential.InventoryGroupPlatformAssociationModel",
                to="dcim.Platform",
            ),
        ),
        migrations.AddField(
            model_name="inventorygroupmodel",
            name="tags",
            field=nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="inventorygroupdeviceassociationmodel",
            name="device_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="device_group_associations",
                to="nautobot_itential.inventorygroupmodel",
            ),
        ),
    ]
